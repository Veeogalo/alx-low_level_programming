!<arch>
0-isupper.c/    0           0     0     644     212       `
#include "main.h"
/**
* _isupper - checks for uppoercase character
* @c: input as an integer
* Return: 1 if uppercase,0 if otherwise
*/
int _isupper(int c)
{
if (c >= 65 && c <= 90)
{
return (1);
}
return (0);
}
0-memset.c/     0           0     0     644     335       `
#include "main.h"
/**
* *_memset - fills memory with a constant byte
* @s:the beginning of value to be filled
* @b:the value desired
* @n:the number of bytes to be changed
* Return: changed arrays with new value n bytes
*/
char *_memset(char *s, char b, unsigned int n)
{
int i = 0;
for (; n > 0; i++)
{
s[i] = b;
n--;
}
return (s);
}

0-strcat.c/     0           0     0     644     303       `
#include "main.h"
/**
 * *_strcat - concatenates two strings
 * @dest: string to
 * @src:string from
 * Return: dest
 */
char *_strcat(char *dest, char *src)
{
int a = 0;
int b = 0;
while (dest[a] != '\0')
{
a++;
}
while (src[b] != '\0')
{
dest[a] = src[b];
a++;
b++;
}
dest[a] = '\0';
return (dest);
}

100-atoi.c/     0           0     0     644     20        `
int _atoi(char *s);
1-isdigit.c/    0           0     0     644     220       `
#include "main.h"
/**
* _isdigit - checks for digits (0 through to 9)
* @c: integer being checked
* Return: 1 if its a digit 0 if otherwise
*/
int _isdigit(int c)
{
if (c >= 48 && c <= 57)
{
return (1);
}
return (0);
}

1-memcpy.c/     0           0     0     644     54        `
char *_memcpy(char *dest, char *src, unsigned int n);
1-strncat.c/    0           0     0     644     32        `
char *_strchr(char *s, char c);
2-strchr.c/     0           0     0     644     32        `
char *_strchr(char *s, char c);
2-strlen.c/     0           0     0     644     212       `
#include "main.h"
/**
* _strlen - returns the length of a string
* @s:the string
* Return: the length of the string
*/
int _strlen(char *s)
{
int longi = 0;
while (*s != '\0')
{
longi++;
s++;
}
return (longi);
}
2-strncpy.c/    0           0     0     644     331       `
#include "main.h"
/**
 * *_strncpy - copies a string
 * @dest: the string copies to
 * @src:the string copies from
 * @n:the size i bytes
 * Return: dest
 */
char *_strncpy(char *dest, char *src, int n)
{
int m = 0;
while (m < n && src[m] != '\0')
{
dest[m] = src[m];
m++;
}
while (m < n)
{
dest[m] = '\0';
m++;
}
return (dest);
}

3-islower.c/    0           0     0     644     242       `
#include "main.h"
/**
* _islower - shows 1 if the input is lowercase and 0 if another
* @c:inpt as integer
* Return: Always 1 (Success)
*/
int _islower(int c)
{
if (c >= 97 && c <= 122)
{
return (1);
}
else
{
return (0);
}
_putchar('\n');
}

3-puts.c/       0           0     0     644     199       `
#include "main.h"
/**
* _puts - prints a string, followed by a new line, to stdout
* @str:string to be printed
*/
void _puts(char *str)
{
while (*str != '\0')
{
_putchar(*str++);
}
_putchar('\n');
}

3-strcmp.c/     0           0     0     644     292       `
#include "main.h"
/**
 * _strcmp - compares two strings
 * @s1:string to be compared
 * @s2:string to be compared
 * Return:Always 0
 */
int _strcmp(char *s1, char *s2)
{
int i = 0;
while (s1[i] != '\0' && s2[i] != '\0')
{
if (s1[i] != s2[i])
{
return (s1[i] - s2[i]);
}
i++;
}
return (0);
}
3-strspn.c/     0           0     0     644     45        `
unsigned int _strspn(char *s, char *accept);

4-isalpha.c/    0           0     0     644     248       `
#include "main.h"
/**
* _isalpha - returns 1 if an input in alphabet and 0 if otherwise
* @c:input as an integer
* Return: Always 1 (Success)
*/
int _isalpha(int c)
{
if (c >= 65 && c <= 122)
{
return (1);
}
else
{
return (0);
}
_putchar('\n');
}

4-strpbrk.c/    0           0     0     644     39        `
char *_strpbrk(char *s, char *accept);

5-strstr.c/     0           0     0     644     45        `
char *_strstr(char *haystack, char *needle);

6-abs.c/        0           0     0     644     196       `
#include "main.h"
/**
* _abs - computes absolute value of an integer
* @i: the absolute value
* Return: absolute value
*/
int _abs(int i)
{
if (i >= 0)
{
return (i);
}
else
{
return (i * -1);
}
}
9-strcpy.c/     0           0     0     644     328       `
#include "main.h"
/**
 * *_strcpy - copies the string pointed to by src
 * @dest: copy to
 * @src: source fro where the string is copied
 * Return: dest
 */
char *_strcpy(char *dest, char *src)
{
int x = 0;
int y = 0;
while (*(src + x) != '\0')
{
x++;
}
for (; y < x; y++)
{
dest[y] = src[y];
}
dest[x] = '\0';
return (dest);
}
_putchar.c/     0           0     0     644     239       `
#include <unistd.h>
/**
* _putchar - writes the character c to stdout
* @c: The character to print
*
* Return: On success 1.
* On error, -1 is returned, and errno is set appropriately.
*/
int _putchar(char c)
{
return (write(1, &c, 1));
}

